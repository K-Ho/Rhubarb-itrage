import { SignedOrder, OrderRelevantState, OrderState } from '../types';
import { OrderFilledCancelledLazyStore } from '../stores/order_filled_cancelled_lazy_store';
import { BalanceAndProxyAllowanceLazyStore } from '../stores/balance_proxy_allowance_lazy_store';
export declare class OrderStateUtils {
    private balanceAndProxyAllowanceLazyStore;
    private orderFilledCancelledLazyStore;
    constructor(balanceAndProxyAllowanceLazyStore: BalanceAndProxyAllowanceLazyStore, orderFilledCancelledLazyStore: OrderFilledCancelledLazyStore);
    getOrderStateAsync(signedOrder: SignedOrder): Promise<OrderState>;
    getOrderRelevantStateAsync(signedOrder: SignedOrder): Promise<OrderRelevantState>;
    private validateIfOrderIsValid(signedOrder, orderRelevantState);
}
